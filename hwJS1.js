"use strict";

// 1 Приведення типів, а саме в String значення, тому консоль виведа строку із трьох значень number33
let num0 = 'number' + 3 + 3;

console.log("num0 " + num0);

// null означає, що немає значення тому консоль виведе 3 
let num1 = null + 3;

console.log("num1 = " + num1);

// перше значення true, тому віддається друге значення qwerty

let num2 = 5 && "qwerty";

console.log("num2 = " + num2);

// так я к перед строками 40 і 2 стоїть знак +, спочатку відбудеться додавання приведення типів у number, а потім відбудеться приведення типів в String і отримаємо  42hillel

let num3 = +'40' + +'2' + "hillel";

console.log("num3 = " + num3);

//спочатку відбудеться віднімання, приведення типів у number, потім порівняння значень, так я з 5 != 6, консоль выведе false

let num4 = '10' - 5 === 6;

console.log("num4 = " + num4);


// true = 1  false = 0, 1+0 =1

let num5 =true + false

console.log("num5 = " + num5);

// Від String не можна відняти number тому NаN

let num6 = '4px' - 3;

console.log("num6 = " + num6);

// Приведення типів у number, результат віднимання 1

let num7 = '4' - 3;

console.log("num7 = " + num7);

// спочатку 3 в ступені 0 буде 1, потім приведення до String = 61

let num8 = '6' + 3 ** 0;

console.log("num8 = " + num8);

// Приведення типів до number, потім ділення відповідь = 2

let num9 = 12 / '6';

console.log("num9 = " + num9);

// Спочатку порівння в душках 5 != 6, тому отримуємо false, а далі додавання двох стрингів відповідь 10false

let num10 = '10' + (5 === 6);

console.log("num10 = " + num10);

// null - це тип данних і порівнюється зі стрінгою тому в консоль виведеться false

let num11 = null == '';

console.log("num11 = " + num11);

// арифметичні дії, спочатку ділення в дужках, потім піднесення у ступіть результат 27

let num12 = 3 ** (9 / 3);

console.log("num12 = " + num12);

// оператор !! - переводить  'false' та 'true' в булійове значення і те і те строка тому  на виході буде true === true 

let num13 = !!'false' == !!'true';

console.log("num13 = " + num13);

// у першій рівності "або" перший аргумент true та другий також true, у рівноті "або" '0' = true, тому віддається друге значення  1


let num14 = 0 || '0' && 1;

console.log("num14 = " + num14);

// Значення в дужках в рівності = true, true в свою чергу = 1, 1 не може бути більше 1, тому консоль виведе false

let num15 = (+null == false) < 1;

console.log("num15 = " + num15);

// в першій рівності, так як перший аргумент false він і повертається, далі порівняння через оператор "або" другий аргумент в цій рівності true, тому повернеться true

let num16 = false && true || true;

console.log("num16 = " + num16);

//  Значення в дужках в рівності = true, true в свою чергу = 1, 1 піднести в до ступеня 5 = 1, 1 не може бути більше 1, тому консоль виведе false

let num17 = (+null == false) < 1 ** 5;

console.log("num17 = " + num17);

